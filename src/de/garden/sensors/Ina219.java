package de.garden.sensors;

import java.util.Objects;
import java.util.Random;

/**
 * Reading data from sensor INA 219.<br><br>
 * 
 * INA218 is the sensor that can read volts and apmers<br>
 * from connected battery.<br><br>
 *  
 * Usefull by solar charged electronic.<br><br>
 *  
 * @author grzeg
 *
 */
public class Ina219 {

//	*******************************************
//	*				  Attributs
//	*******************************************
	
	/**
	 * Actual volts of batterys in the garden wathering system.
	 */
	protected double volts;
	
	/**
	 * Actual energy konsumption in the garden wathering system.
	 */
	protected double ampers;
	
//	*******************************************
//	*				Konstruktors
//	*******************************************
	
	/**
	 * In this class constructor all values are autogenerated.<br>
	 * We can use it in fake read symulation.
	 */
	public Ina219() {
		Random lotto= new Random();
		double rest = lotto.nextDouble();
		rest *= 100;
		rest = Math.round(rest);
		rest /= 100;
		this.ampers = rest;
		this.volts = 3.33 + ampers;
	}
	
	/**
	 * Standard constructor.<br>
	 * In this class construktor we can add values manual. <br>
	 * @param volts
	 * @param ampers
	 */
	public Ina219(double volts, double ampers) {
		this.volts = volts;
		this.ampers = ampers;
	}
	
//	*******************************************
//	*				 Functions
//	*******************************************

	/**
	 * Getter for volts.
	 * @return the volts
	 */
	public double getVolts() {
		return volts;
	}

	/**
	 * Setter for volts.
	 * @param volts the volts to set
	 */
	public void setVolts(double volts) {
		this.volts = volts;
	}

	/**
	 * Getter for ampers.
	 * @return the ampers
	 */
	public double getAmpers() {
		return ampers;
	}

	/**
	 * Setter for ampers.
	 * @param ampers the ampers to set
	 */
	public void setAmpers(double ampers) {
		this.ampers = ampers;
	}

	@Override
	public int hashCode() {
		return Objects.hash(ampers, volts);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Ina219 other = (Ina219) obj;
		return Double.doubleToLongBits(ampers) == Double.doubleToLongBits(other.ampers)
				&& Double.doubleToLongBits(volts) == Double.doubleToLongBits(other.volts);
	}

	@Override
	public String toString() {
		return "Ina219 [volts=" + volts + ", ampers=" + ampers + "]";
	}

}
